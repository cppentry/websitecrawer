<table class="content" width="100%" cellspacing="0" cellpadding="0" style="TABLE-LAYOUT: fixed;WORD-WRAP: break-word" align="center">
              <tr> 
                <td align="left" class="content_word" id="read_tpc"><font id="zoom" face="宋体"><span id="post1">
                  <div style="float:left;"><script type="text/javascript">
    (function() {
        var s = "_" + Math.random().toString(36).slice(2);
        document.write('<div style="" id="' + s + '"></div>');
        (window.slotbydup = window.slotbydup || []).push({
            id: "u3596939",
            container:  s
        });
    })();
</script>
<!-- 多条广告如下脚本只需引入一次 -->
<script type="text/javascript" src="//cpro.baidustatic.com/cpro/ui/c.js" async="async" defer></script>
</div>
		<br>		  
		    一个<a href="http://c.chinaitlab.com" target="_blank"></a><a href="http://www.cppentry.com" style="text-decoration:underline;font-size:14px;color:#F70968;" target="_blank">C++</a>(www.cppentry.com)程序员，想要进一步提升技术水平的话，应该多了解一些语言的语意细节。对于使用V<a href="http://c.chinaitlab.com" target="_blank"></a><a href="http://www.cppentry.com" style="text-decoration:underline;font-size:14px;color:#F70968;" target="_blank">C++</a>(www.cppentry.com)的程序员来说，还应该了解一些VC++(www.cppentry.com)对于C++(www.cppentry.com)的诠释。Inside the C++(www.cppentry.com) Object Model虽然是一本好书，然而，书的篇幅多一些，又和具体的VC++(www.cppentry.com)关系小一些。因此，从篇幅和内容来看，译者认为本文是深入理解C++(www.cppentry.com)对象模型比较好的一个出发点。<br>    <br>    这篇文章以前看到时就觉得很好，旧文重读，感觉理解得更多一些了，于是产生了翻译出来，与大家共享的想法。虽然文章不长，但时间有限，又若干次在翻译时打盹睡着，拖拖拉拉用了小一个月。<br>    <br>    一方面因本人水平所限，另一方面因翻译时经常打盹，错误之处恐怕不少，欢迎大家批评指正。<br>        <br><strong>    1 前言<br></strong>    <br>    了解你所使用的<a href="http://www.cppentry.com" style="text-decoration:underline;font-size:14px;color:#F70968;" target="_blank">编程</a>(www.cppentry.com)语言究竟是如何<a href="https://www.cppentry.com/" style="text-decoration:underline;font-size:14px;color:#F70968;" target="_blank">实现</a>的，对于C++(www.cppentry.com)程序员可能特别有意义。首先，它可以去除我们对于所使用语言的神秘感，使我们不至于对于编译器干的活感到完全不可思议；尤其重要的是，它使我们在Debug和使用语言高级特性的时候，有更多的把握。当需要提高代码效率的时候，这些知识也能够很好地帮助我们。<br>    <br>    本文着重回答这样一些问题：<br>    <br>    * 类如何布局？<br>    <br>    * 成员变量如何访问？<br>    <br>    * 成员函数如何访问？<br>    <br>    * 所谓的"调整块"（adjuster thunk）是怎么回事？<br>    <br>    * 使用如下机制时，开销如何：<br>    <br>    * 单继承、多重继承、虚继承<br>    <br>    * 虚函数调用<br>    <br>    * 强制转换到基类，或者强制转换到虚基类<br>    <br>    * 异常处理<br>    <br>    首先，我们顺次考察C兼容的结构（struct）的布局，单继承，多重继承，以及虚继承；<br>    <br>    接着，我们讲成员变量和成员函数的访问，当然，这里面包含虚函数的情况；<br>    <br>    再接下来，我们考察构造函数，析构函数，以及特殊的赋值操作符成员函数是如何工作的，数组是如何动态构造和销毁的；<br>    <br>    最后，简单地介绍对异常处理的支持。<br>    <br>    对每个语言特性，我们将简要介绍该特性背后的动机，该特性自身的语意（当然，本文决不是"C++(www.cppentry.com)入门",大家对此要有充分认识），以及该特性在微软的VC++(www.cppentry.com)中是如何<a href="https://www.cppentry.com/" style="text-decoration:underline;font-size:14px;color:#F70968;" target="_blank">实现</a>的。这里要注意区分抽象的C++(www.cppentry.com)语言语意与其特定实现。微软之外的其他C++(www.cppentry.com)厂商可能提供一个完全不同的实现，我们偶尔也会将VC++(www.cppentry.com)的实现与其他实现进行比较。<br>    <font color="#ff0000"><p> </p><p align="center"><br></p></font>  
		<p> 请关注公众号获取更多资料</p>
		<p> <img src="https://www.cppentry.com/images/mp.jpg"> </p>
		<br><a href="https://www.cppentry.com/bencandy.php?fid=49&amp;id=1605" target="_blank"> 谈VC++对象模型(一) https://www.cppentry.com/bencandy.php?fid=49&amp;id=1605 </a>
		<br><a href="https://jq.qq.com/?_wv=1027&amp;k=5umE9MB"><img src="https://bizapp.qq.com/webimg/01_online.gif"></a>
		<br></span></font></td>
              </tr>
            </table>